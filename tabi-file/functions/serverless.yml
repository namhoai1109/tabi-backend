service: ${self:custom.mainAppName.${opt:stage, 'dev'}}-functions

frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-hooks-plugin

custom:
  mainAppName:
    dev: tabi-file
  deploymentBuckets:
    dev: tabi-sls-bucket
  role:
    function: arn:aws:iam::434599936010:role/lambda-function-role

  hooks:
    before:package:initialize:
      - env GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o migration/main migration/main.go
    after:deploy:finalize:
      - rm -rf .serverless migration/main

provider:
  name: aws
  runtime: go1.x
  profile: tabi-backend
  timeout: 10
  memorySize: 128
  deploymentBucket:
    name: ${self:custom.deploymentBuckets.${opt:stage, 'dev'}}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-1'}
  vpc:
    subnetIds:
      - subnet-0d79ec6d6b91e0850
      - subnet-07e6887c495a174af
    securityGroupIds:
      - sg-0c98f125a66e46b7b
  environment:
    STAGE: ${opt:stage, 'dev'}
    DEBUG: true
    DB_LOG: true
    CONFIG_NAME: ${self:custom.mainAppName.${opt:stage, 'dev'}}-${opt:stage, 'dev'}
  iam:
    role: arn:aws:iam::434599936010:role/lambda-function-role

package:
  individually: true
  patterns:
    - "!./**"
    - .env

functions:
  Migration:
    name: ${self:service}-migration-${opt:stage, 'dev'}
    handler: migration/main
    package:
      patterns:
        - migration/main